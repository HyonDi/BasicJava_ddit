package d_array;

public class Array {

	public static void main(String[] args) {
		
		/*
		 <<배열>>
		 -int[] number = new int[5]; //기본값으로 초기화된다.
		 -int[] number = new int[]{10, 20, 30, 40, 50};
		 -int[] number = {10, 20, 30, 40, 50};
		 
		*/
		//변수는 값을 하나만 저장할 수 있지만 배열은 값을 여러개 저장할 수 있다. 
		//똑같은 변수인데 값을 여러개 저장할 수 있음.
		//값을 효율적으로 다룰 수 있게 됩니다.
		//선언방법: 데이터타입 붙여주고 [] 타입 뒤, 변수이름 뒤에 붙여도 됨. 위치는 상관 없다. 보통은 타입 뒤에 붙임.
		
		//초기화 할 때 new 하고 타입 그대로 쓰고 대괄호 안에 숫자를 하나 넣는데, 
		//그 숫자는 배열의 크기를 지정하는 것이다. 숫자를 몇 개 저장할것인지. 갯수를 지정한것.
		//숫자 5를 적은건 총 5개의 숫자를 넣을 수 있다는 것이다.
		// -int[] number = new int[5];   --> 이렇게 할 결우 5개의 공간에 기본값인 0이 저장된 채로 생성된다.
		//-int[] number = new int[]{10, 20, 30, 40, 50};  --> 대괄호안에 숫자를 넣지 않고 값을 콤마로 구분지어 넣음.
		// 이 배열의 크기는 5가 됨. (5개 넣었으니까.)
		//int[] number = {10, 20, 30, 40, 50}; --> 뉴 인트 생략하고 바로 값을 넣는다.
		
		//배열은 참조형 타입입니다.
		//값이 저장되어있는 주소를 저장.
		int [] array; //배열의 주소를 저장할 공간이 만들어진다.
		array = new int[5]; //배열이 생성되고 그 주소가 저장된다.
		//new : 새로운 저장공간 생성 및 주소 반환.
		//int[5] : int 를 저장할 수 있는 5개의 공간.
		//이 방식으로 배열 초기화시 기본값 = 0 이 저장된다.
		
		System.out.println(array); //실행결과 : 알수없는 값들이 나옴.
		//array 라는 변수(배열)에 저장된 주소가 출력된 것이다.
		System.out.println(array[1]); // 실제 저장된 값에 접근하기 위해서는 index를 지정해줘야 한다.
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

	}

}
